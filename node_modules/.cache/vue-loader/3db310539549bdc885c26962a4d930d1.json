{"remainingRequest":"E:\\code\\m-sms\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\m-sms\\src\\components\\Layout\\Layout.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\m-sms\\src\\components\\Layout\\Layout.vue","mtime":1617030375000},{"path":"E:\\code\\m-sms\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\m-sms\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\code\\m-sms\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\m-sms\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { createNamespacedHelpers } from 'vuex';\nconst { mapState, mapActions } = createNamespacedHelpers('layout');\n\nimport Sidebar from '@/components/Sidebar/Sidebar';\nimport Header from '@/components/Header/Header';\nimport Helper from '@/components/Helper/Helper';\nimport BreadcrumbHistory from '@/components/BreadcrumbHistory/BreadcrumbHistory';\n\nimport './Layout.scss';\n\nexport default {\n  name: 'Layout',\n  components: { Sidebar, Header, Helper, BreadcrumbHistory },\n  methods: {\n    ...mapActions(['switchSidebar', 'handleSwipe', 'changeSidebarActive', 'toggleSidebar'],\n    ),\n    handleWindowResize() {\n      const width = window.innerWidth;\n\n      if (width <= 768 && this.sidebarStatic) {\n        this.toggleSidebar();\n        this.changeSidebarActive(null);\n      }\n    },\n  },\n  computed: {\n    ...mapState([\"sidebarClose\", \"sidebarStatic\"]),\n  },\n  created() {\n    const staticSidebar = JSON.parse(localStorage.getItem('sidebarStatic'));\n\n    if (staticSidebar) {\n      this.$store.state.layout.sidebarStatic = true;\n    } else if (!this.sidebarClose) {\n      setTimeout(() => {\n        this.switchSidebar(true);\n        this.changeSidebarActive(null);\n      }, 2500);\n    }\n\n    this.handleWindowResize();\n    window.addEventListener('resize', this.handleWindowResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n};\n",{"version":3,"sources":["Layout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Layout.vue","sourceRoot":"src/components/Layout","sourcesContent":["<template>\n<div :class=\"[{root: true, sidebarClose, sidebarStatic}, 'sing-dashboard']\">\n  <Sidebar />\n  <Helper />\n  <div class=\"wrap\">\n    <Header />\n    <v-touch class=\"content\" @swipe=\"handleSwipe\" :swipe-options=\"{direction: 'horizontal'}\">\n      <breadcrumb-history></breadcrumb-history>\n      <transition name=\"router-animation\">\n        <router-view />\n      </transition>\n      <footer class=\"contentFooter\">\n        Sing App Vue Dashboard Free Template - Made by <a href=\"https://flatlogic.com\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Flatlogic</a>\n      </footer>\n    </v-touch>\n  </div>\n</div>\n</template>\n\n<script>\nimport { createNamespacedHelpers } from 'vuex';\nconst { mapState, mapActions } = createNamespacedHelpers('layout');\n\nimport Sidebar from '@/components/Sidebar/Sidebar';\nimport Header from '@/components/Header/Header';\nimport Helper from '@/components/Helper/Helper';\nimport BreadcrumbHistory from '@/components/BreadcrumbHistory/BreadcrumbHistory';\n\nimport './Layout.scss';\n\nexport default {\n  name: 'Layout',\n  components: { Sidebar, Header, Helper, BreadcrumbHistory },\n  methods: {\n    ...mapActions(['switchSidebar', 'handleSwipe', 'changeSidebarActive', 'toggleSidebar'],\n    ),\n    handleWindowResize() {\n      const width = window.innerWidth;\n\n      if (width <= 768 && this.sidebarStatic) {\n        this.toggleSidebar();\n        this.changeSidebarActive(null);\n      }\n    },\n  },\n  computed: {\n    ...mapState([\"sidebarClose\", \"sidebarStatic\"]),\n  },\n  created() {\n    const staticSidebar = JSON.parse(localStorage.getItem('sidebarStatic'));\n\n    if (staticSidebar) {\n      this.$store.state.layout.sidebarStatic = true;\n    } else if (!this.sidebarClose) {\n      setTimeout(() => {\n        this.switchSidebar(true);\n        this.changeSidebarActive(null);\n      }, 2500);\n    }\n\n    this.handleWindowResize();\n    window.addEventListener('resize', this.handleWindowResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n};\n</script>\n\n<style src=\"./Layout.scss\" lang=\"scss\" />\n"]}]}