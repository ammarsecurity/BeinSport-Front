{"remainingRequest":"E:\\code\\SMSFrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\SMSFrontEnd\\src\\components\\Sidebar\\Sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\SMSFrontEnd\\src\\components\\Sidebar\\Sidebar.vue","mtime":1619010169904},{"path":"E:\\code\\SMSFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\SMSFrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\code\\SMSFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\SMSFrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from 'vuex';\nimport isScreen from '@/core/screenHelper';\nimport NavLink from './NavLink/NavLink';\n\nexport default {\n  name: 'Sidebar',\n  components: { NavLink },\n  data() {\n    return {\n      alerts: [\n        {\n          id: 0,\n          title: 'Sales Report',\n          value: 15,\n          footer: 'Calculating x-axis bias... 65%',\n          color: 'danger',\n        },\n        {\n          id: 1,\n          title: 'Personal Responsibility',\n          value: 20,\n          footer: 'Provide required notes',\n          color: 'primary',\n        },\n      ],\n    };\n  },\n  methods: {\n    ...mapActions('layout', ['changeSidebarActive', 'switchSidebar']),\n    setActiveByRoute() {\n      const paths = this.$route.fullPath.split('/');\n      paths.pop();\n      this.changeSidebarActive(paths.join('/'));\n    },\n    sidebarMouseEnter() {\n      if (!this.sidebarStatic && (isScreen('lg') || isScreen('xl'))) {\n        this.switchSidebar(false);\n        this.setActiveByRoute();\n      }\n    },\n    sidebarMouseLeave() {\n      if (!this.sidebarStatic && (isScreen('lg') || isScreen('xl'))) {\n        this.switchSidebar(true);\n        this.changeSidebarActive(null);\n      }\n    },\n  },\n  created() {\n    this.setActiveByRoute();\n  },\n  computed: {\n    ...mapState('layout', {\n      sidebarStatic: state => state.sidebarStatic,\n      sidebarOpened: state => !state.sidebarClose,\n      activeItem: state => state.sidebarActiveElement,\n    }),\n  },\n};\n",{"version":3,"sources":["Sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Sidebar.vue","sourceRoot":"src/components/Sidebar","sourcesContent":["<template>\n  <div class=\"sidebar-wrapper\">\n    <nav\n        :class=\"{sidebar: true, sidebarStatic, sidebarOpened}\"\n        @mouseenter=\"sidebarMouseEnter\"\n        @mouseleave=\"sidebarMouseLeave\"\n    >\n      <header class=\"logo\">\n        <router-link to=\"/sms/dashboard\"><span class=\"primary-word\">الافق</span> <span class=\"secondary-word\"> رسائل</span></router-link>\n      </header>\n      <h5 class=\"navTitle first\">\n        APP\n      </h5>\n      <ul class=\"nav\">\n        <NavLink\n            :activeItem=\"activeItem\"\n            header=\"الرئيسية\"\n            link=\"/sms/dashboard\"\n            iconName=\"flaticon-home\"\n            index=\"dashboard\"\n            isHeader\n        />\n       <NavLink\n            :activeItem=\"activeItem\"\n            header=\"الافليت\"\n            link=\"ظsms/addAffiliate\"\n            iconName=\"flaticon-home\"\n            index=\"dashboard\"\n            isHeader\n        />\n    \n      </ul>\n    </nav>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\nimport isScreen from '@/core/screenHelper';\nimport NavLink from './NavLink/NavLink';\n\nexport default {\n  name: 'Sidebar',\n  components: { NavLink },\n  data() {\n    return {\n      alerts: [\n        {\n          id: 0,\n          title: 'Sales Report',\n          value: 15,\n          footer: 'Calculating x-axis bias... 65%',\n          color: 'danger',\n        },\n        {\n          id: 1,\n          title: 'Personal Responsibility',\n          value: 20,\n          footer: 'Provide required notes',\n          color: 'primary',\n        },\n      ],\n    };\n  },\n  methods: {\n    ...mapActions('layout', ['changeSidebarActive', 'switchSidebar']),\n    setActiveByRoute() {\n      const paths = this.$route.fullPath.split('/');\n      paths.pop();\n      this.changeSidebarActive(paths.join('/'));\n    },\n    sidebarMouseEnter() {\n      if (!this.sidebarStatic && (isScreen('lg') || isScreen('xl'))) {\n        this.switchSidebar(false);\n        this.setActiveByRoute();\n      }\n    },\n    sidebarMouseLeave() {\n      if (!this.sidebarStatic && (isScreen('lg') || isScreen('xl'))) {\n        this.switchSidebar(true);\n        this.changeSidebarActive(null);\n      }\n    },\n  },\n  created() {\n    this.setActiveByRoute();\n  },\n  computed: {\n    ...mapState('layout', {\n      sidebarStatic: state => state.sidebarStatic,\n      sidebarOpened: state => !state.sidebarClose,\n      activeItem: state => state.sidebarActiveElement,\n    }),\n  },\n};\n</script>\n\n<!-- Sidebar styles should be scoped -->\n<style src=\"./Sidebar.scss\" lang=\"scss\" scoped/>\n"]}]}