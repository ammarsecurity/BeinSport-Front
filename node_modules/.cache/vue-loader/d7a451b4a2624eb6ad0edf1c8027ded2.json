{"remainingRequest":"E:\\code\\SMSFrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\SMSFrontEnd\\src\\components\\BreadcrumbHistory\\BreadcrumbHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\SMSFrontEnd\\src\\components\\BreadcrumbHistory\\BreadcrumbHistory.vue","mtime":1617030375000},{"path":"E:\\code\\SMSFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\SMSFrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\code\\SMSFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\SMSFrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nexport default {\n  name: 'BreadcrumbHistory',\n  props: {\n    exclude: {type: Array, default: () => []}\n  },\n  computed: {\n    excluded() {\n      return this.exclude.indexOf(this.$route.path.split('/').pop()) > -1;\n    },\n    tree() {\n      return ['YOU ARE HERE']\n        .concat(this.$route.path\n          .split('/')\n          .slice(1)\n          .map(route => route\n            .split('-')\n            .map(word => word[0].toUpperCase() + word.slice(1))\n            .join(' ')\n          )\n        );\n    }\n  }\n}\n",{"version":3,"sources":["BreadcrumbHistory.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BreadcrumbHistory.vue","sourceRoot":"src/components/BreadcrumbHistory","sourcesContent":["<template>\n  <div v-if=\"!excluded\">\n    <b-breadcrumb :items=\"tree\"></b-breadcrumb>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'BreadcrumbHistory',\n    props: {\n      exclude: {type: Array, default: () => []}\n    },\n    computed: {\n      excluded() {\n        return this.exclude.indexOf(this.$route.path.split('/').pop()) > -1;\n      },\n      tree() {\n        return ['YOU ARE HERE']\n          .concat(this.$route.path\n            .split('/')\n            .slice(1)\n            .map(route => route\n              .split('-')\n              .map(word => word[0].toUpperCase() + word.slice(1))\n              .join(' ')\n            )\n          );\n      }\n    }\n  }\n</script>\n"]}]}