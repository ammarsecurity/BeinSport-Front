{"remainingRequest":"E:\\code\\SMSFrontEnd\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\code\\SMSFrontEnd\\src\\components\\Header\\Header.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\code\\SMSFrontEnd\\src\\components\\Header\\Header.vue","mtime":1619092820977},{"path":"E:\\code\\SMSFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\SMSFrontEnd\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\code\\SMSFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\code\\SMSFrontEnd\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from \"vuex\";\nimport Notifications from \"@/components/Notifications/Notifications\";\n\nexport default {\n  name: \"Header\",\n  components: { Notifications },\n  computed: {\n    ...mapState(\"layout\", [\"sidebarClose\", \"sidebarStatic\"]),\n  },\n  methods: {\n    ...mapActions(\"layout\", [\n      \"toggleSidebar\",\n      \"switchSidebar\",\n      \"changeSidebarActive\",\n    ]),\n    switchSidebarMethod() {\n      if (!this.sidebarClose) {\n        this.switchSidebar(true);\n        this.changeSidebarActive(null);\n      } else {\n        this.switchSidebar(false);\n        const paths = this.$route.fullPath.split(\"/\");\n        paths.pop();\n        this.changeSidebarActive(paths.join(\"/\"));\n      }\n    },\n    toggleSidebarMethod() {\n      if (this.sidebarStatic) {\n        this.toggleSidebar();\n        this.changeSidebarActive(null);\n      } else {\n        this.toggleSidebar();\n        const paths = this.$route.fullPath.split(\"/\");\n        paths.pop();\n        this.changeSidebarActive(paths.join(\"/\"));\n      }\n    },\n  },\n};\n",{"version":3,"sources":["Header.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Header.vue","sourceRoot":"src/components/Header","sourcesContent":["<template>\n  <b-navbar class=\"header d-print-none app-header\">\n    <b-navbar-brand href=\"#\"><img src=\"../../assets/logo.png\" alt=\"logo\" style=\"width: 13%;\" /></b-navbar-brand>\n    <b-nav>\n   \n      <b-nav-item-dropdown\n        id=\"v-step-2\"\n        class=\"settingsDropdown d-sm-down-none\"\n        no-caret\n        right\n      >\n        <template slot=\"button-content\">\n          <i class=\"fi flaticon-settings-10 px-2\" />\n        </template>\n       \n        <b-dropdown-item>\n          <router-link role=\"button\" class=\"fs-mini\" to=\"/sms/myProfile\"\n            ><i class=\"fi flaticon-person px-3 mr-3\" /> حسابي</router-link\n          >\n        </b-dropdown-item>\n        <b-dropdown-divider />\n        <b-dropdown-item-button>\n          <router-link class=\"d-block text-center\" to=\"/logout\">\n            <i class=\"fi flaticon-power-1 px-3 mr-3\" /> تسجيل الخروج\n          </router-link>\n        </b-dropdown-item-button>\n      </b-nav-item-dropdown>\n    </b-nav>\n  </b-navbar>\n</template>\n\n<script>\nimport { mapState, mapActions } from \"vuex\";\nimport Notifications from \"@/components/Notifications/Notifications\";\n\nexport default {\n  name: \"Header\",\n  components: { Notifications },\n  computed: {\n    ...mapState(\"layout\", [\"sidebarClose\", \"sidebarStatic\"]),\n  },\n  methods: {\n    ...mapActions(\"layout\", [\n      \"toggleSidebar\",\n      \"switchSidebar\",\n      \"changeSidebarActive\",\n    ]),\n    switchSidebarMethod() {\n      if (!this.sidebarClose) {\n        this.switchSidebar(true);\n        this.changeSidebarActive(null);\n      } else {\n        this.switchSidebar(false);\n        const paths = this.$route.fullPath.split(\"/\");\n        paths.pop();\n        this.changeSidebarActive(paths.join(\"/\"));\n      }\n    },\n    toggleSidebarMethod() {\n      if (this.sidebarStatic) {\n        this.toggleSidebar();\n        this.changeSidebarActive(null);\n      } else {\n        this.toggleSidebar();\n        const paths = this.$route.fullPath.split(\"/\");\n        paths.pop();\n        this.changeSidebarActive(paths.join(\"/\"));\n      }\n    },\n  },\n};\n</script>\n\n<style src=\"./Header.scss\" lang=\"scss\"></style>\n"]}]}